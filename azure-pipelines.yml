# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3b91c73d-8c04-4ecc-9575-ea97006c8c21'
  imageRepository: 'rctomcatwar'
  containerRegistry: 'sampleproj.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  # tag: '$(Build.BuildId)'
  tag: 41


  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Install
  variables:
  - group: personal
  - name: temppwfilename
    value: 'tempPW.txt'
  - name: imgName
    value: 'releaseFirstApp'
  displayName: Tryna install docker
  jobs:
    - job: I1J1
      displayName: Install Job1
      steps:
      - task: SSH@0
        inputs:
          sshEndpoint: 'ubuntuPrivateTesting'
          runOptions: 'inline'
          inline: |
            echo "H9RrNTVHVh8ZfD=LKBqdl9Sqn8jfoF4i" > $(temppwfilename)
            docker ps | grep -i release && (sudo docker stop $(imgName);sudo docker rm $(imgName))
            cat $(temppwfilename) | docker login -u $(CR_USERNAME) --password-stdin $(CR_SERVER)
            rm $(temppwfilename)
            docker pull $(CR_SERVER)/firstapp:v1.0.$(tag)
            docker run -d --name $(imgName) -p 5003:8080 $(CR_SERVER)/firstapp:v1.0.$(tag)\n" > tempServerScript.sh
            bash ./tempServerScript.sh
          readyTimeout: '20000'